# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.24)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS APSI::apsi)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target APSI::apsi
add_library(APSI::apsi STATIC IMPORTED)

set_target_properties(APSI::apsi PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_COMPILE_OPTIONS "-DHAVE_CONFIG;-DUSE_SECURE_SEED;-DUSE_ENDO=true;-D__WINDOWS__;-D_AMD64_;/arch:AVX2;-D_AVX2_"
  INTERFACE_INCLUDE_DIRECTORIES "C:/WorkStation/APSI/APSI/common;C:/WorkStation/APSI/APSI/sender;C:/WorkStation/APSI/APSI/receiver;C:/WorkStation/APSI/APSI/common;C:/WorkStation/APSI/APSI/sender"
  INTERFACE_LINK_LIBRARIES "Threads::Threads;SEAL::seal;Kuku::kuku;flatbuffers::flatbuffers;jsoncpp_static;log4cplus::log4cplus;libzmq-static;cppzmq-static"
)

# Import target "APSI::apsi" for configuration "Debug"
set_property(TARGET APSI::apsi APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(APSI::apsi PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "C;CXX"
  IMPORTED_LOCATION_DEBUG "C:/WorkStation/APSI/APSI/lib/Debug/apsi-0.11.lib"
  )

# Import target "APSI::apsi" for configuration "Release"
set_property(TARGET APSI::apsi APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(APSI::apsi PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C;CXX"
  IMPORTED_LOCATION_RELEASE "C:/WorkStation/APSI/APSI/lib/Release/apsi-0.11.lib"
  )

# Import target "APSI::apsi" for configuration "MinSizeRel"
set_property(TARGET APSI::apsi APPEND PROPERTY IMPORTED_CONFIGURATIONS MINSIZEREL)
set_target_properties(APSI::apsi PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_MINSIZEREL "C;CXX"
  IMPORTED_LOCATION_MINSIZEREL "C:/WorkStation/APSI/APSI/lib/MinSizeRel/apsi-0.11.lib"
  )

# Import target "APSI::apsi" for configuration "RelWithDebInfo"
set_property(TARGET APSI::apsi APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
set_target_properties(APSI::apsi PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELWITHDEBINFO "C;CXX"
  IMPORTED_LOCATION_RELWITHDEBINFO "C:/WorkStation/APSI/APSI/lib/RelWithDebInfo/apsi-0.11.lib"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
